#!/bin/bash

# Complete Fan Control System Installation Script
# For ASUS ROG STRIX B550-F motherboard with NCT6775 chip
# Installs everything needed for a complete fan control system on a fresh system

set -e  # Exit on any error

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
INSTALL_DIR="/home/$(whoami)/fanctrl"
USERNAME=$(whoami)
SUDOERS_FILE="/etc/sudoers.d/fan-control"
HYPRLAND_CONFIG="$HOME/.config/hypr/hyprland.conf"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if running as root
check_root() {
    if [ "$EUID" -eq 0 ]; then
        print_error "Do not run this script as root! It will handle sudo operations internally."
        exit 1
    fi
}

# Detect distribution and package manager
detect_distro() {
    if command -v pacman &> /dev/null; then
        DISTRO="arch"
        PKG_MANAGER="pacman"
        INSTALL_CMD="sudo pacman -S --needed"
    elif command -v apt-get &> /dev/null; then
        DISTRO="debian"
        PKG_MANAGER="apt"
        INSTALL_CMD="sudo apt-get install -y"
    elif command -v dnf &> /dev/null; then
        DISTRO="fedora"
        PKG_MANAGER="dnf"
        INSTALL_CMD="sudo dnf install -y"
    elif command -v zypper &> /dev/null; then
        DISTRO="opensuse"
        PKG_MANAGER="zypper"
        INSTALL_CMD="sudo zypper install -y"
    else
        print_error "Unsupported distribution. Please install dependencies manually."
        exit 1
    fi
    
    print_status "Detected distribution: $DISTRO"
}

# Install required packages
install_dependencies() {
    print_status "Installing required packages..."
    
    case $DISTRO in
        "arch")
            $INSTALL_CMD rofi lm_sensors
            ;;
        "debian")
            $INSTALL_CMD rofi lm-sensors
            ;;
        "fedora")
            $INSTALL_CMD rofi lm_sensors
            ;;
        "opensuse")
            $INSTALL_CMD rofi sensors
            ;;
    esac
    
    print_success "Dependencies installed successfully"
}

# Detect hardware
detect_hardware() {
    print_status "Detecting hardware..."
    
    # Load necessary kernel modules
    sudo modprobe nct6775 2>/dev/null || true
    sleep 2
    
    # Auto-detect NCT6775 hwmon path
    NCT_PATH=$(find /sys/devices/platform/nct6775.* -name "hwmon" 2>/dev/null | head -1)
    if [ -z "$NCT_PATH" ]; then
        print_error "NCT6775 chip not detected. Please ensure the nct6775 kernel module is loaded."
        exit 1
    fi
    
    # Find the correct hwmon subdirectory
    HWMON_PATH=$(find "$NCT_PATH" -name "pwm1" 2>/dev/null | head -1 | sed 's/\/pwm1$//')
    if [ -z "$HWMON_PATH" ]; then
        print_error "PWM controls not found in detected hardware path: $NCT_PATH"
        exit 1
    fi
    
    print_success "Hardware detected at: $HWMON_PATH"
    
    # Test hardware access
    if [ ! -r "${HWMON_PATH}/pwm1" ]; then
        print_error "Cannot read PWM controls. Hardware may not be properly detected."
        exit 1
    fi
}

# Create installation directory
create_install_dir() {
    print_status "Creating installation directory..."
    
    if [ ! -d "$INSTALL_DIR" ]; then
        mkdir -p "$INSTALL_DIR"
        print_success "Created directory: $INSTALL_DIR"
    else
        print_warning "Directory already exists: $INSTALL_DIR"
    fi
}

# Install fan control scripts
install_scripts() {
    print_status "Installing fan control scripts..."
    
    # Copy all scripts to installation directory
    cp "$SCRIPT_DIR/fan_control.sh" "$INSTALL_DIR/"
    cp "$SCRIPT_DIR/rofi_fan_control.sh" "$INSTALL_DIR/"
    cp "$SCRIPT_DIR/smart_fan_daemon.sh" "$INSTALL_DIR/"
    cp "$SCRIPT_DIR/test_fan_gui.sh" "$INSTALL_DIR/"
    
    # Make scripts executable
    chmod +x "$INSTALL_DIR"/*.sh
    
    # Update hwmon path in scripts to match detected hardware
    sed -i "s|/sys/devices/platform/nct6775.656/hwmon/hwmon[0-9]*|$HWMON_PATH|g" "$INSTALL_DIR"/*.sh
    
    print_success "Fan control scripts installed and configured"
}

# Install sudoers configuration
install_sudoers() {
    print_status "Installing sudoers configuration..."
    
    # Create sudoers content with detected hardware path
    local sudoers_content="# Allow $USERNAME to control fan PWM without password
# Generated by fan control installation script

$USERNAME ALL=(root) NOPASSWD: /usr/bin/tee $HWMON_PATH/pwm*_enable
$USERNAME ALL=(root) NOPASSWD: /usr/bin/tee $HWMON_PATH/pwm*"
    
    # Create temporary file
    local temp_file=$(mktemp)
    echo "$sudoers_content" > "$temp_file"
    
    # Install with proper permissions
    sudo cp "$temp_file" "$SUDOERS_FILE"
    sudo chmod 440 "$SUDOERS_FILE"
    sudo chown root:root "$SUDOERS_FILE"
    
    # Validate sudoers file
    if sudo visudo -c -f "$SUDOERS_FILE"; then
        print_success "Sudoers configuration installed successfully"
    else
        print_error "Invalid sudoers configuration!"
        sudo rm -f "$SUDOERS_FILE"
        rm -f "$temp_file"
        exit 1
    fi
    
    # Clean up
    rm -f "$temp_file"
}

# Configure Hyprland keybindings
configure_hyprland() {
    print_status "Configuring Hyprland keybindings..."
    
    if [ ! -f "$HYPRLAND_CONFIG" ]; then
        print_warning "Hyprland config not found at $HYPRLAND_CONFIG"
        print_warning "You'll need to manually add the keybindings later"
        return 0
    fi
    
    # Check if fan control keybindings already exist
    if grep -q "fanctrl/rofi_fan_control.sh" "$HYPRLAND_CONFIG" 2>/dev/null; then
        print_warning "Fan control keybindings already exist in Hyprland config"
        return 0
    fi
    
    # Add keybindings to Hyprland config
    cat >> "$HYPRLAND_CONFIG" << EOF

# Fan Control Keybindings - Added by fan control installer
bind = CTRL ALT, F, exec, $INSTALL_DIR/rofi_fan_control.sh
bind = CTRL ALT, 1, exec, $INSTALL_DIR/fan_control.sh set 1 30; $INSTALL_DIR/fan_control.sh set 3 30; $INSTALL_DIR/fan_control.sh set 6 30  # Silent mode
bind = CTRL ALT, 2, exec, $INSTALL_DIR/fan_control.sh set 1 50; $INSTALL_DIR/fan_control.sh set 3 50; $INSTALL_DIR/fan_control.sh set 6 50  # Quiet mode  
bind = CTRL ALT, 3, exec, $INSTALL_DIR/fan_control.sh set 1 80; $INSTALL_DIR/fan_control.sh set 3 80; $INSTALL_DIR/fan_control.sh set 6 80  # Performance mode
bind = CTRL ALT, 0, exec, $INSTALL_DIR/fan_control.sh auto 1; $INSTALL_DIR/fan_control.sh auto 3; $INSTALL_DIR/fan_control.sh auto 6  # Auto mode
bind = CTRL ALT, T, exec, rofi -e "\$(sensors | grep -E '(Tctl|SYSTIN|fan[36]):')" -theme-str 'window {width: 400px;}'
EOF
    
    print_success "Hyprland keybindings configured"
}

# Create desktop entry (optional)
create_desktop_entry() {
    print_status "Creating desktop entry..."
    
    local desktop_file="$HOME/.local/share/applications/fan-control.desktop"
    mkdir -p "$(dirname "$desktop_file")"
    
    cat > "$desktop_file" << EOF
[Desktop Entry]
Name=Fan Control
Comment=Control system fans
Exec=$INSTALL_DIR/rofi_fan_control.sh
Icon=system-run
Terminal=false
Type=Application
Categories=System;Settings;
EOF
    
    print_success "Desktop entry created"
}

# Test installation
test_installation() {
    print_status "Testing installation..."
    
    # Test 1: Script permissions
    if [ -x "$INSTALL_DIR/fan_control.sh" ]; then
        print_success "Scripts are executable"
    else
        print_error "Scripts are not executable"
        return 1
    fi
    
    # Test 2: Hardware access
    if [ -r "${HWMON_PATH}/pwm1" ]; then
        print_success "Hardware is accessible"
    else
        print_error "Hardware is not accessible"
        return 1
    fi
    
    # Test 3: Sudo permissions
    if echo 1 | sudo tee "${HWMON_PATH}/pwm1_enable" > /dev/null 2>&1; then
        # Reset to auto mode
        echo 5 | sudo tee "${HWMON_PATH}/pwm1_enable" > /dev/null 2>&1
        print_success "Sudo permissions are working"
    else
        print_error "Sudo permissions failed"
        return 1
    fi
    
    # Test 4: Dependencies
    if command -v rofi &> /dev/null; then
        print_success "Rofi is installed"
    else
        print_error "Rofi is not installed"
        return 1
    fi
    
    if command -v sensors &> /dev/null; then
        print_success "lm-sensors is installed"
    else
        print_error "lm-sensors is not installed"
        return 1
    fi
    
    print_success "All tests passed!"
}

# Display completion message
show_completion() {
    echo ""
    echo "======================================"
    echo "  Fan Control Installation Complete!"
    echo "======================================"
    echo ""
    echo "Installation directory: $INSTALL_DIR"
    echo "Detected hardware path: $HWMON_PATH"
    echo ""
    echo "Available commands:"
    echo "  $INSTALL_DIR/fan_control.sh        - Command-line fan control"
    echo "  $INSTALL_DIR/rofi_fan_control.sh   - GUI fan control"
    echo "  $INSTALL_DIR/smart_fan_daemon.sh   - Smart temperature-based control"
    echo ""
    echo "Hyprland Keybindings:"
    echo "  Ctrl+Alt+F - Open fan control GUI"
    echo "  Ctrl+Alt+1 - Silent mode (30%)"
    echo "  Ctrl+Alt+2 - Quiet mode (50%)"
    echo "  Ctrl+Alt+3 - Performance mode (80%)"
    echo "  Ctrl+Alt+0 - Auto mode"
    echo "  Ctrl+Alt+T - Temperature monitoring"
    echo ""
    echo "To test the installation, run:"
    echo "  $INSTALL_DIR/test_fan_gui.sh"
    echo ""
    echo "For smart daemon configuration:"
    echo "  $INSTALL_DIR/smart_fan_daemon.sh config"
    echo ""
    echo "Note: If using Hyprland, restart it or reload config to activate keybindings"
}

# Main installation process
main() {
    echo "=========================================="
    echo "  Complete Fan Control System Installer"
    echo "  ASUS ROG STRIX B550-F / NCT6775 Chip"
    echo "=========================================="
    echo ""
    
    # Pre-installation checks
    check_root
    detect_distro
    
    # Ask for confirmation
    echo "This script will:"
    echo "  • Install required dependencies (rofi, lm-sensors)"
    echo "  • Detect and configure NCT6775 hardware"
    echo "  • Install fan control scripts to $INSTALL_DIR"
    echo "  • Configure passwordless sudo for fan control"
    echo "  • Add Hyprland keybindings (if applicable)"
    echo "  • Create desktop entry"
    echo "  • Test the complete installation"
    echo ""
    read -p "Continue with installation? [Y/n]: " confirm
    if [ "$confirm" = "n" ] || [ "$confirm" = "N" ]; then
        echo "Installation cancelled."
        exit 0
    fi
    
    # Installation steps
    echo ""
    print_status "Starting installation..."
    
    install_dependencies
    detect_hardware
    create_install_dir
    install_scripts
    install_sudoers
    configure_hyprland
    create_desktop_entry
    
    # Final testing
    echo ""
    test_installation
    
    # Show completion message
    show_completion
}

# Run main function
main "$@"
